{
  "swagger": "2.0",
  "info": {
    "title": "ML Task List",
    "description": "ML Serverless Assignment - Task List App",
    "version": "1.0.0"
  },
  "host": "duki4yrm34.execute-api.us-east-1.amazonaws.com",
  "basePath": "/dev",
  "schemes": [
    "https"
  ],
  "tags": [],
  "securityDefinitions": {},
  "paths": {
    "/tasks": {
      "get": {
        "tags": [],
        "summary": "List tasks for a user",
        "description": "",
        "operationId": "get-tasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tasks for the specified user.",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          },
          "400": {
            "description": "Bad Request. Most likely `user` parameter missing.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [],
        "summary": "Add a task for a specific user.",
        "description": "",
        "operationId": "post-tasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task added successfully.",
            "schema": {
              "$ref": "#/definitions/UUID"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "patch": {
        "tags": [],
        "summary": "Update a specific task for a user.",
        "description": "",
        "operationId": "patch-tasks/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully.",
            "schema": {
              "$ref": "#/definitions/UUID"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [],
        "summary": "Delete a specific task for a user.",
        "description": "",
        "operationId": "delete-tasks/{id}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully.",
            "schema": {
              "$ref": "#/definitions/UUID"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UUID": {
      "type": "object",
      "title": "UUID Response",
      "description": "Object with UUID",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "title": "UUID"
        }
      },
      "required": [
        "id"
      ]
    },
    "Task": {
      "type": "object",
      "title": "Task",
      "description": "A task",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "title": "Description",
          "description": "Description of the task"
        },
        "priority": {
          "type": "integer",
          "multipleOf": 1,
          "maximum": 9,
          "minimum": 0,
          "title": "Priority",
          "description": "Task priority, as a single-digit integer. 0 is highest priority"
        },
        "completed": {
          "type": "string",
          "format": "date-time",
          "title": "Completed",
          "description": "Completed datetime, formatted as an ISO8601 string"
        }
      },
      "required": [
        "description",
        "priority"
      ]
    },
    "Tasks": {
      "type": "array",
      "title": "Tasks",
      "description": "A list of tasks",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "User": {
      "type": "string",
      "minLength": 5,
      "maxLength": 254,
      "title": "User",
      "description": "User's email address"
    },
    "Error": {
      "title": "Error Schema",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
